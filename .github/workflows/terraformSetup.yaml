name: Terraform Setup

on:
  workflow_dispatch:
  push:
    branches:
      - nick/bootstrap-terraform

jobs:
  setup_environment:
    name: Setup a new GCP environment by creating a tfstate bucket
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/setup
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Check Out Changes
        uses: actions/checkout@v3

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: ${{ secrets.SKYLIGHT_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SKYLIGHT_SERVICE_ACCOUNT_ID }}

      - name: Load input variables
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: ${{ secrets.GCP_REGION }}
          ZONE: ${{ secrets.GCP_ZONE }}
        run: |
          echo project_id=\""$PROJECT_ID"\" >> terraform.tfvars
          echo region=\""$REGION"\" >> terraform.tfvars
          echo zone=\""$ZONE"\" >> terraform.tfvars

      - name: terraform init
        run: terraform init

      - name: terraform apply
        run: terraform apply -auto-approve -lock-timeout=30m

      - name: Get tfstate bucket name
        run: echo "state_bucket_name=$(terraform output state_bucket_name)" >> $GITHUB_ENV

      - name: Set TFSTATE_BUCKET_NAME secret
        uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: "TFSTATE_BUCKET_NAME"
          value: "${{ env.state_bucket_name }}"
          repository: hmanzur/actions-set-secret
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
