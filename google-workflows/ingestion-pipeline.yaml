main:
  params:
    - event
  steps:
    - decode_pubsub_message:
        assign:
          - base64: $${base64.decode(event.data.message.data)}
          - message: $${json.decode(base64)}
          - input_data: $${message.message}
          - input_type: $${message.message_type}
          - root_template: $${message.root_template}
          - filename: $${message.filename}
    - convert_to_fhir:
        try:
          call: http.post
          args:
            url: ${fhir_converter_url}/convert-to-fhir
            auth:
              type: OIDC
            body:
              input_data: $${input_data}
              input_type: $${input_type}
              root_template: $${root_template}
          result: fhir_converter_response
        except:
          as: error
          steps:
            - upload_failed_fhir_conversion:
                call: http.post
                args:
                  url: ${ingestion_service_url}/cloud/storage/write_blob_to_storage
                  auth:
                    type: OIDC
                  body: 
                    blob: $${error.body}
                    file_name: failed_fhir_conversion/$${filename}
                    bucket_name: ${phi_storage_bucket}
                    cloud_provider: gcp
                  headers:
                    Content-Type: "application/json"
                next: end
    - standardize_name:
        call: http.post
        args:
          url: ${ingestion_service_url}/fhir/harmonization/standardization/standardize_names
          auth:
            type: OIDC
          body: 
            data: $${fhir_converter_response.body.FhirResource}
          headers:
            Content-Type: "application/json"
        result: standardize_names_response
    - standardize_phone:
        call: http.post
        args:
          url: ${ingestion_service_url}/fhir/harmonization/standardization/standardize_phones
          auth:
            type: OIDC
          body: 
            data: $${standardize_names_response.body.bundle}
          headers:
            Content-Type: "application/json"
        result: standardize_phones_response
    - geocode_patients:
        call: http.post
        args:
          url: ${ingestion_service_url}/fhir/geospatial/geocode/geocode_bundle
          auth:
            type: OIDC
          body: 
            bundle: $${standardize_phones_response.body.bundle}
            geocode_method: smarty
          headers:
            Content-Type: "application/json"
        result: geocode_patients_response
    - add_patient_hash:
        call: http.post
        args:
          url: ${ingestion_service_url}/fhir/linkage/link/add_patient_identifier_in_bundle
          auth:
            type: OIDC
          body: 
            bundle: $${geocode_patients_response.body.bundle}
          headers:
            Content-Type: "application/json"
        result: add_patient_hash_response
    - upload_fhir_bundle:
        try:
          call: http.post
          args:
            url: ${ingestion_service_url}/fhir/transport/http/upload_bundle_to_fhir_server
            auth:
              type: OIDC
            body:
              fhir_url: ${fhir_store_url}
              bundle: $${add_patient_hash_response.body.bundle}
              cred_manager: gcp
            headers:
              Content-Type: "application/json"
          result: upload_fhir_bundle_response
        except:
          as: error
          steps:
            - log_failed_fhir_upload:
                call: http.post
                args:
                  url: ${ingestion_service_url}/cloud/storage/write_blob_to_storage
                  auth:
                    type: OIDC
                  body: 
                    blob: $${error.body}
                    file_name: failed_fhir_upload/$${filename}
                    bucket_name: ${phi_storage_bucket}
                    cloud_provider: gcp
                  headers:
                    Content-Type: "application/json"
                next: end        